package jrJava.linkedList_innerClass_1;

import java.util.NoSuchElementException;
import java.util.*;

public class MyIterator<S> implements Iterator<S> {

	LinkedList<S> list;
	Link<S> current;
	Link<S> previous;
	
	public MyIterator(LinkedList<S> list){
		this.list = list;
	}
	
	public void reset(){
		current = null;
		previous = null;
	}
	
	public boolean hasNext(){
		if(current==null && previous==null) return list.first!=null;
		return current.next!=null;
	}
	
	public Link next(){
		if(current==null && previous==null){
			current = list.first;
		}
		else {
			previous = current;
			current = current.next;
		}
		return current;
	}
	
	
	public void remove() {   
		if(current==null) throw new NoSuchElementException(); 
		
		if(previous==null){
			list.first = list.first.next;
			reset();
		}
		else {
			previous.next = current.next;
			current = previous;
		}
	}
}









